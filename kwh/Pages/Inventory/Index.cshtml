@page
@model kwh.Pages.Inventory.IndexModel

@{
    ViewData["Title"] = "Components";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <h2>DAS Components</h2>
    <p>
        <a asp-page="Create">Create New</a>
    </p>

    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <b>Search By:</b>
            @foreach (var searchby in Model.Criteria)
            {
                @Html.RadioButtonFor(m => m.SearchBy, searchby)<text> @searchby  </text>
            }
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </div>
    </form>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.CategorySort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Component[0].Category)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Component[0].PartNumber)
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Component[0].PartName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.CostSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Component[0].UnitCost)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.QuantitySort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Component[0].QuantityCurrent)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.ProjectSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Component[0].Project)
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Component)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PartNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PartName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityCurrent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.ProjectName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ComponentId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ComponentId">Details</a>
                    <!-- <a asp-page="./Delete" asp-route-id="@item.ComponentId">Delete</a> -->
                </td>
            </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.Component.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Component.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Component.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Component.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>


</body>
</html>
