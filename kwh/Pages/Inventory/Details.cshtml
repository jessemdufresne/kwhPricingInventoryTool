@page 
@model kwh.Pages.Inventory.DetailsModel

@{
    ViewData["Title"] = "Component Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.bundle.min.js"></script>
    <style>

    </style>
    <title>Details</title>
</head>
<body>
    <div>
        <h4 class="m-3">Component Details</h4>
        <div class="w-90 bg-white m-5 rounded">
            <canvas id="priceChart" />
        </div>
        <table class="table border-hidden bg-white mb-0 mt-3">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].PartNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].PartName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Category)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Vendor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].UnitCost)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Notes)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Maturity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Url)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].QuantityCurrent)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].QuantityNeeded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Project)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Component[0].Volunteer)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Component)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.PartNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PartName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Vendor.VendorName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Maturity.MaturityStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Url)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuantityCurrent)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuantityNeeded)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Project.ProjectName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Volunteer.LastName)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="text-center m-3">
        <input type="button" value="Back to List" onclick="window.location.href='./Index';" class="btn btn-primary" />
    </div>
</body>
</html>

<script>
    //Line graph styling: https://www.chartjs.org/docs/latest/charts/line.html
    //Time Axis: https://www.chartjs.org/docs/latest/axes/cartesian/time.html
    Chart.defaults.global.legend.display = false;
    var ctx = document.getElementById('priceChart').getContext('2d');
    var tti = [@Model.TimestampsList];
    var LineChart = new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [{
                fill: false,
                borderColor: 'rgb(162, 202, 153)',
                borderWidth: 2,
                lineTension: 0.2,
                data: [@Model.UnitCostList]
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Price History',
                fontSize: 20,
                fontFamily: 'Helvetica',
                fontColor: '#272727',
                fontStyle: 'bold',
            },
            scales: {
                xAxes: [{
                    type: 'time',
                    labels: [@Model.TimestampsList],
                    distribution: 'linear',
                    time: {
                        parser: 'M/DD/YYYY hh:mm a',
                        unit: 'week'
                    }
                }]
            },
            tooltips: {
                callbacks: {
                    title: function (tooltipItem, data) {
                        console.log(tooltipItem);
                        return 'Date: ' + tti[tooltipItem[0].index];
                    },
                    label: function (tooltipItem, data) {
                        return "Unit Cost: $" + tooltipItem.yLabel;
                    }
                }
            }
        }
    });
</script>
