@page

@model kwh.Pages.Inventory.DetailsModel

@{
    ViewData["Title"] = "Component Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.bundle.min.js"></script>
    <title>Details</title>
</head>
<body>
    <div class="text-center">
        <br />
        <div class="row justify-content-center">
            <h4 class="m-2 text-center">Component Details</h4>
        </div>

        <div class="row justify-content-center">
            <div class="w-75 bg-white m-3 rounded">
                <canvas id="priceChart" />
            </div>
        </div>

        <div class="row justify-content-center">
            <p class="text-center">Zulu Time Zone is shown (UTC)</p>
        </div>
        <div class="row justify-content-center">
            <div class="col-11">
                <table class="table border-hidden bg-white rounded">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].PartNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].PartName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Category)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Vendor)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].UnitCost)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Notes)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Maturity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Url)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].QuantityCurrent)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].QuantityNeeded)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].Project)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Component[0].AppUser)
                            </th>
                            <th>
                                Date Added/Modified
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Component)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PartNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PartName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vendor.VendorName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UnitCost)
                                </td>
                                <td>
                                    <img src="~/Images/Notepad-icon.png" data-toggle="popover" data-placement="top" data-content="@Html.DisplayFor(modelItem => item.Notes)" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Maturity.MaturityStatus)
                                </td>
                                <td>
                                    <a href="@item.Url" target="_blank">
                                        <img src="~/Images/icons8-link-26.png" style="width: 20px;" />
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.QuantityCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.QuantityNeeded)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Project.ProjectName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AppUser.Username)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Timestamp)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="text-center m-3">
        <button class="btn btn-primary py-2 mb-4" onclick="window.history.back()">&larr; Back</button>
        <a type="button" asp-page="./Edit" asp-route-id="@Model.Component[0].Id" class="btn btn-primary py-2 mb-4">Edit</a>
    </div>
</body>
</html>

<script>
    $("[data-toggle=popover]").popover();

    //Line graph styling: https://www.chartjs.org/docs/latest/charts/line.html
    //Time Axis: https://www.chartjs.org/docs/latest/axes/cartesian/time.html
    Chart.defaults.global.legend.display = false;
    var ctx = document.getElementById('priceChart').getContext('2d');
    var tti = [@Model.TimestampsList];
    var LineChart = new Chart(ctx, {
        responsive: true, 
        type: 'line',
        data: {
            datasets: [{
                fill: false,
                borderColor: 'rgb(162, 202, 153)',
                pointBackgroundColor: 'rgb(162, 202, 153)', 
                borderWidth: 2,
                lineTension: 0.3,
                data: [@Model.UnitCostList]
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Price History',
                fontSize: 20,
                fontFamily: 'Helvetica',
                fontColor: '#272727',
                fontStyle: 'bold',
            },
            scales: {
                xAxes: [{
                    type: 'time',
                    offset: true,
                    scaleLabel: {
                        labelString: 'Time',
                        display: true
                    },
                    labels: tti,
                    time: {
                        parser: 'MM/DD/YYYY HH:mm',
                        format: "MM/DD/YYYY HH:mm",
                        displayFormats: {
                            millisecond: 'HH:mm',
                            second: 'HH:mm',
                            minute: 'HH:mm',
                            hour: 'HH:mm',
                            quarter: 'MMM YYYY'
                        }
                    },
                    ticks: {
                        maxTicksLimit: 10
                    }
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        maxTicksLimit: 5,
                        callback: function (value) {
                            if (value.toString().length == 1) {
                                return '$' + value + '.00';
                            }
                            return '$' + value;
                        }
                    },
                    scaleLabel: {
                        labelString: '$ Cost',
                        display: true
                    }
                }]
            },
            tooltips: {
                callbacks: {
                    title: function (tooltipItem, data) {
                        return 'Date: ' + tti[tooltipItem[0].index];
                    },
                    label: function (tooltipItem, data) {
                        return "Unit Cost: $" + tooltipItem.yLabel;
                    }
                }
            }
        }
    });
</script>